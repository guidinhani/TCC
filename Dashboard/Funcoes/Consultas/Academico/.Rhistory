cursosIFSP <- estudos %>%
group_by(Curso) %>%
filter(Escola == "IFSP") %>%
filter(Nome %in% c(nomeEgressos$Nome)) %>%
distinct(Nome, .keep_all = TRUE) %>%
summarise(Quantidade = n()) %>%
arrange(desc(Quantidade))
# ==============================================================================
# BIBLIOTECAS
# ==============================================================================
library(shiny)
library(shinydashboard)
library(plotly)
library(dplyr)
library(stringr)
library(dashboardthemes)
library(ggplot2)
# ==============================================================================
# LEITURA DOS DADOS PADRONIZADOS
# ==============================================================================
estudos <- read.csv(file = "EstudosPadronizado.csv", header = TRUE, stringsAsFactors = FALSE)
empregos <- read.csv(file = "EmpregosPadronizado.csv", header = TRUE, stringsAsFactors = FALSE)
# ==============================================================================
# LEITURA DAS FUNÇÕES
# ==============================================================================
# GERAL
source("Funcoes/Geral/egressosADS.r", encoding = "UTF-8")
source("Funcoes/Geral/egressosGPI.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEgressosEstudos.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEgressosProfissional.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEmpresasAtuais.r", encoding = "UTF-8")
# DASHBOARD
source("Funcoes/TemaDashboard/TemaDashboard.r", encoding = "UTF-8")
# CONSULTAS/GRÁFICOS ACADÊMICOS
source("Funcoes/Consultas/Academico/ConsultaCursosFeitosIFSP.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoCursosFeitosIFSP.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaAnosEgressoIFSP.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoAnosEgressoIFSP.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaProsseguiuEstudos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoProsseguiuEstudos.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaAreasCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoAreasCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoCursosProsseguidos.r", encoding = "UTF-8")
# CONSULTAS/GRÁFICOS PROFISSIONAIS
source("Funcoes/Consultas/Profissional/ConsultaCargosAtuais.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoCargosAtuais.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaLocalizacaoEmpresas.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoLocalizacaoEmpresas.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaNomeEmpresaAtual.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoNomeEmpresaAtual.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaTipoEmpresa.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoTipoEmpresa.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaAreasFormacaoEmprego.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoAreaAtualEmprego.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoTrabalhaAreaFormacao.r", encoding = "UTF-8")
# ==============================================================================
# DASHBOARD
# ==============================================================================
ui <- dashboardPage(
# CABEÇALHO
dashboardHeader(
title = "Egressos IFSP",
tags$li(
class = "dropdown",
radioButtons(
"idCurso", "",
c(
"ANÁLISE E DESENVOLVIMENTO DE SISTEMAS" = "idADS",
"GESTÃO DA PRODUÇÃO INDUSTRIAL" = "idGPI"
),
inline = TRUE
)
),
tags$li(class = "dropdown link-ifsp", tags$a(
href = "http://slt.ifsp.edu.br/portal/", target = "_blank",
tags$img(height = "30px", alt = "IFSP Logo", src = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Logotipo_IFET.svg/220px-Logotipo_IFET.svg.png")
))
),
# BARRA LATERAL
dashboardSidebar(
sidebarMenu(
menuItem("DADOS ACADÊMICOS", tabName = "estudos", icon = icon("graduation-cap")),
menuItem("DADOS PROFISSIONAIS", tabName = "empregos", icon = icon("briefcase"))
)
),
# CORPO DA DASHBOARD
dashboardBody(
tags$head(tags$link(rel = "shortcut icon", href = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Logotipo_IFET.svg/220px-Logotipo_IFET.svg.png")),
tags$style(".sidebar-toggle{display:none !important}"),
tags$style(".navbar-custom-menu, .main-header .navbar-right {float: none !important; display: flex !important; justify-content:space-around !important;}"),
tags$style(".link-ifsp{position:absolute !important; right:0 !important;}"),
TemaDashboard,
tabItems(
# ESTUDOS
tabItem(
tabName = "estudos",
fluidRow(
valueBoxOutput("quantidadeEgressosEstudos")
),
fluidRow(
box(title = "Cursos concluídos no IFSP", status = "primary", solidHeader = T, plotlyOutput("cursosFeitosIFSP"), width = 6, collapsible = TRUE),
box(title = "Anos de término da graduação", status = "primary", solidHeader = T, plotlyOutput("anosEgressoIFSP"), width = 6, collapsible = TRUE),
box(title = "Prosseguiram nos estudos após a graduação no IFSP", status = "primary", solidHeader = T, plotlyOutput("prosseguiuEstudos"), width = 6, collapsible = TRUE),
box(title = "Áreas dos cursos prosseguidos após a graduação", status = "primary", solidHeader = T, plotlyOutput("areasCursosProsseguidos"), width = 6, collapsible = TRUE),
box(title = "Tipos de cursos prosseguidos após a graduação", status = "primary", solidHeader = T, plotlyOutput("cursosProsseguidos"), width = 12, collapsible = TRUE)
)
),
# EMPREGOS
tabItem(
tabName = "empregos",
fluidRow(
valueBoxOutput("quantidadeEgressosProfissional"),
valueBoxOutput("quantidadeEmpresasAtuais")
),
fluidRow(
box(title = "Egressos que trabalham na área de formação", status = "primary", solidHeader = T, plotlyOutput("trabalhaAreaFormacao"), width = 6, collapsible = TRUE),
box(title = "Áreas em que os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("areaAtualEmprego"), width = 6, collapsible = TRUE),
box(title = "Classificação das empresas onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("tipoDaEmpresa", height = 600), width = 6, collapsible = TRUE),
box(title = "Empresas onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("nomeEmpresaAtual", height = 600), width = 6, collapsible = TRUE),
box(title = "Cidades onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("localizacaoEmpresas", height = 600), width = 6, collapsible = TRUE),
box(title = "Atuais cargos de trabalho", status = "primary", solidHeader = T, plotlyOutput("cargosAtuais", height = 600), width = 6, collapsible = TRUE)
)
)
)
)
)
# ==============================================================================
# SERVIDOR
# ==============================================================================
# ==============================================================================
# CONSULTAS ACADÊMICAS
# ==============================================================================
server <- function(input, output) {
# ==============================================================================
# VARIÁVEIS GLOBAIS
# ==============================================================================
nomeEgressos <- reactive(switch(input$idCurso,
idADS = egressosADS(),
idGPI = egressosGPI()
))
flag <- reactive(switch(input$idCurso,
idADS = "ehADS",
idGPI = "ehGPI"
))
siglaCurso <- reactive(switch(input$idCurso,
idADS = "ADS",
idGPI = "GPI"
))
# ==============================================================================
# CONSULTAS ACADEMICAS
# ==============================================================================
# QUANTIDADE DE EGRESSOS NA PARTE ACADEMICA
output$quantidadeEgressosEstudos <- renderValueBox({
valueBox(
paste0(QuantidadeEgressosEstudos(flag()), " de ", QuantidadeEgressosEstudos(flag())), "Egressos estudaram",
icon = icon("address-book"),
color = "light-blue"
)
})
# CURSOS CONCLUÍDOS NA REDE IFSP
output$cursosFeitosIFSP <- renderPlotly({
dataframe <- ConsultaCursosFeitosIFSP(nomeEgressos())
GraficoCursosFeitosIFSP(dataframe)
})
# ANO DE EGRESSO DOS CURSOS
output$anosEgressoIFSP <- renderPlotly({
dataframe <- ConsultaAnosEgressoIFSP(nomeEgressos(), siglaCurso())
GraficoAnosEgressoIFSP(dataframe)
})
# SE O EGRESSO FEZ MAIS ALGUM CURSO APÓS A GRADUAÇÃO
output$prosseguiuEstudos <- renderPlotly({
dataframe <- ConsultaProsseguiuEstudos(nomeEgressos(), flag())
print(dataframe)
GraficoProsseguiuEstudos(dataframe)
})
# QUAIS AS ÁREAS DOS CURSOS QUE O EGRESSO FEZ APÓS A GRADUAÇÃO
output$areasCursosProsseguidos <- renderPlotly({
dataframe <- ConsultaAreasCursosProsseguidos(nomeEgressos(), flag())
GraficoAreasCursosProsseguidos(dataframe)
})
# QUAIS CURSOS O EGRESSO FEZ APÓS A GRADUAÇÃO
output$cursosProsseguidos <- renderPlotly({
dataframe <- ConsultaCursosProsseguidos(nomeEgressos(), flag())
GraficoCursosProsseguidos(dataframe)
})
# ==============================================================================
# CONSULTAS PROFISSIONAIS
# ==============================================================================
# QUANTIDADE DE EGRESSOS NA PARTE PROFISSIONAL
output$quantidadeEgressosProfissional <- renderValueBox({
valueBox(
paste0(QuantidadeEgressosProfissional(nomeEgressos()), " de ", QuantidadeEgressosEstudos(flag())), "Egressos trabalham",
icon = icon("address-book"),
color = "light-blue"
)
})
# QUANTIDADE DE EMPRESAS EM QUE OS EGRESSOS TRABALHAM ATUALMENTE
output$quantidadeEmpresasAtuais <- renderValueBox({
valueBox(
paste0(QuantidadeEmpresasAtuais(nomeEgressos()), " empresas"), "Empregam os egressos",
icon = icon("building"),
color = "light-blue"
)
})
# SE TRABALHA NA AREA DE FORMAÇÃO DA GRADUAÇÃO
output$trabalhaAreaFormacao <- renderPlotly({
dataframe <- ConsultaAreasFormacaoEmprego(nomeEgressos(), siglaCurso())
GraficoTrabalhaAreaFormacao(dataframe)
})
# QUAL AREA ELE TRABALHA NO ULTIMO/ATUAL EMPREGO
output$areaAtualEmprego <- renderPlotly({
dataframe <- ConsultaAreasFormacaoEmprego(nomeEgressos(), siglaCurso())
GraficoAreaAtualEmprego(dataframe)
})
# SE A EMPRESA ATUAL DE TRABALHO É PUBLICA OU PRIVADA
output$tipoDaEmpresa <- renderPlotly({
dataframe <- ConsultaTipoEmpresa(nomeEgressos())
GraficoTipoEmpresa(dataframe)
})
# NOME DA EMPRESA ATUAL DE TRABALHO
output$nomeEmpresaAtual <- renderPlotly({
dataframe <- ConsultaNomeEmpresaAtual(nomeEgressos())
GraficoNomeEmpresaAtual(dataframe)
})
# LOCALIZAÇÃO DA EMPRESA NO ULTIMO/ATUAL EMPREGO
output$localizacaoEmpresas <- renderPlotly({
dataframe <- ConsultaLocalizacaoEmpresas(nomeEgressos())
GraficoLocalizacaoEmpresas(dataframe)
})
# ATUAL CARGO NA EMPRESA NO ULTIMO/ATUAL EMPREGO
output$cargosAtuais <- renderPlotly({
dataframe <- ConsultaCargosAtuais(nomeEgressos())
GraficoCargosAtuais(dataframe)
})
}
shinyApp(ui, server)
cursosIFSP <- estudos %>%
group_by(Curso) %>%
filter(Escola == "IFSP") %>%
filter(Nome %in% c(nomeEgressos$Nome)) %>%
distinct(Nome, .keep_all = TRUE) %>%
summarise(Quantidade = n()) %>%
arrange(desc(Quantidade))
styler:::style_active_file()
styler:::style_active_file()
?str_squish
styler:::style_active_file()
# ==============================================================================
# BIBLIOTECAS
# ==============================================================================
library(shiny)
library(shinydashboard)
library(plotly)
library(dplyr)
library(stringr)
library(dashboardthemes)
library(ggplot2)
# ==============================================================================
# LEITURA DOS DADOS PADRONIZADOS
# ==============================================================================
estudos <- read.csv(file = "EstudosPadronizado.csv", header = TRUE, stringsAsFactors = FALSE)
empregos <- read.csv(file = "EmpregosPadronizado.csv", header = TRUE, stringsAsFactors = FALSE)
# ==============================================================================
# LEITURA DAS FUNÇÕES
# ==============================================================================
# GERAL
source("Funcoes/Geral/egressosADS.r", encoding = "UTF-8")
source("Funcoes/Geral/egressosGPI.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEgressosEstudos.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEgressosProfissional.r", encoding = "UTF-8")
source("Funcoes/Geral/quantidadeEmpresasAtuais.r", encoding = "UTF-8")
source("Funcoes/Geral/totalDeEgressos.r", encoding = "UTF-8")
# DASHBOARD
source("Funcoes/TemaDashboard/TemaDashboard.r", encoding = "UTF-8")
# CONSULTAS/GRÁFICOS ACADÊMICOS
source("Funcoes/Consultas/Academico/ConsultaCursosAntesGraduacao.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoCursosAntesGraduacao.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaAnoDeEgresso.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoEgressosPorAno.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaProsseguiuEstudos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoProsseguiuEstudos.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaAreasCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoAreasCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Consultas/Academico/ConsultaCursosProsseguidos.r", encoding = "UTF-8")
source("Funcoes/Graficos/Academico/GraficoCursosProsseguidos.r", encoding = "UTF-8")
# CONSULTAS/GRÁFICOS PROFISSIONAIS
source("Funcoes/Consultas/Profissional/ConsultaCargosAtuais.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoCargosAtuais.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaLocalizacaoEmpresas.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoLocalizacaoEmpresas.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaNomeEmpresaAtual.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoNomeEmpresaAtual.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaTipoEmpresa.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoTipoEmpresa.r", encoding = "UTF-8")
source("Funcoes/Consultas/Profissional/ConsultaAreasFormacaoEmprego.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoAreaAtualEmprego.r", encoding = "UTF-8")
source("Funcoes/Graficos/Profissional/GraficoTrabalhaAreaFormacao.r", encoding = "UTF-8")
# ==============================================================================
# DASHBOARD
# ==============================================================================
ui <- dashboardPage(
# Cabeçalho
dashboardHeader(
title = "Egressos IFSP",
# Rádio buttons
tags$li(
class = "dropdown",
radioButtons("idCurso", "",
c("ANÁLISE E DESENVOLVIMENTO DE SISTEMAS" = "idADS", "GESTÃO DA PRODUÇÃO INDUSTRIAL" = "idGPI"),
inline = TRUE
)
),
# Logo do IFSP FavIcon
tags$li(
class = "dropdown link-ifsp",
tags$a(
href = "http://slt.ifsp.edu.br/portal/", target = "_blank",
tags$img(height = "30px", alt = "IFSP Logo", src = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Logotipo_IFET.svg/220px-Logotipo_IFET.svg.png")
)
)
),
# Barra lateral esquerda
dashboardSidebar(
sidebarMenu(
menuItem("DADOS ACADÊMICOS", tabName = "estudos", icon = icon("graduation-cap")),
menuItem("DADOS PROFISSIONAIS", tabName = "empregos", icon = icon("briefcase"))
)
),
# Corpo da dashboard
dashboardBody(
tags$head(tags$link(rel = "shortcut icon", href = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Logotipo_IFET.svg/220px-Logotipo_IFET.svg.png")),
tags$style(".sidebar-toggle{display:none !important}"),
tags$style(".navbar-custom-menu, .main-header .navbar-right {float: none !important; display: flex !important; justify-content:space-around !important;}"),
tags$style(".link-ifsp{position:absolute !important; right:0 !important;}"),
TemaDashboard,
tabItems(
# Estudos
tabItem(
tabName = "estudos",
fluidRow(
valueBoxOutput("quantidadeEgressosEstudos")
),
fluidRow(
box(title = "Cursos concluídos antes da graduação", status = "primary", solidHeader = T, plotlyOutput("cursosAntesGraduacao"), width = 6, collapsible = TRUE),
box(title = "Número de egressos por ano", status = "primary", solidHeader = T, plotlyOutput("anosEgressoIFSP"), width = 6, collapsible = TRUE),
box(title = "Prosseguiram nos estudos após a graduação no IFSP", status = "primary", solidHeader = T, plotlyOutput("prosseguiuEstudos"), width = 6, collapsible = TRUE),
box(title = "Áreas dos cursos prosseguidos após a graduação", status = "primary", solidHeader = T, plotlyOutput("areasCursosProsseguidos"), width = 6, collapsible = TRUE),
box(title = "Tipos de cursos prosseguidos após a graduação", status = "primary", solidHeader = T, plotlyOutput("cursosProsseguidos"), width = 12, collapsible = TRUE)
)
),
# Empregos
tabItem(
tabName = "empregos",
fluidRow(
valueBoxOutput("quantidadeEgressosProfissional"),
valueBoxOutput("quantidadeEmpresasAtuais")
),
fluidRow(
box(title = "Egressos que trabalham na área de formação", status = "primary", solidHeader = T, plotlyOutput("trabalhaAreaFormacao"), width = 6, collapsible = TRUE),
box(title = "Áreas em que os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("areaAtualEmprego"), width = 6, collapsible = TRUE),
box(title = "Classificação das empresas onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("tipoDaEmpresa", height = 600), width = 6, collapsible = TRUE),
box(title = "Empresas onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("nomeEmpresaAtual", height = 600), width = 6, collapsible = TRUE),
box(title = "Cidades onde os egressos trabalham", status = "primary", solidHeader = T, plotlyOutput("localizacaoEmpresas", height = 600), width = 6, collapsible = TRUE),
box(title = "Atuais cargos de trabalho", status = "primary", solidHeader = T, plotlyOutput("cargosAtuais", height = 600), width = 6, collapsible = TRUE)
)
)
)
)
)
# ==============================================================================
# SERVIDOR
# ==============================================================================
# ==============================================================================
# CONSULTAS ACADÊMICAS
# ==============================================================================
server <- function(input, output) {
# ==============================================================================
# VARIÁVEIS GLOBAIS
# ==============================================================================
egressos <- reactive(switch(input$idCurso,
idADS = egressosADS(),
idGPI = egressosGPI()
))
flag <- reactive(switch(input$idCurso,
idADS = "ehADS",
idGPI = "ehGPI"
))
siglaCurso <- reactive(switch(input$idCurso,
idADS = "ADS",
idGPI = "GPI"
))
# ==============================================================================
# CONSULTAS ACADÊMICAS
# ==============================================================================
# Quantidade de egressos nas parte acadêmica
output$quantidadeEgressosEstudos <- renderValueBox({
valueBox(
paste0(QuantidadeEgressosEstudos(flag()), " de ", TotalDeEgressos(siglaCurso())), "Egressos estudaram",
icon = icon("address-book"),
color = "light-blue"
)
})
# Cursos concluídos antes da graduação
output$cursosAntesGraduacao <- renderPlotly({
dataframe <- ConsultaCursosAntesGraduacao(egressos(), flag(), siglaCurso())
GraficoCursosAntesGraduacao(dataframe)
})
# Ano de egresso dos cursos
output$anosEgressoIFSP <- renderPlotly({
dataframe <- ConsultaAnoDeEgresso(egressos(), siglaCurso())
GraficoAnosEgressoIFSP(dataframe)
})
# Mostra se o egresso fez mais algum curso após a graduação
output$prosseguiuEstudos <- renderPlotly({
dataframe <- ConsultaProsseguiuEstudos(egressos(), flag(), siglaCurso())
GraficoProsseguiuEstudos(dataframe)
})
# Quais as áreas dos cursos o egresso fez após a graduação
output$areasCursosProsseguidos <- renderPlotly({
dataframe <- ConsultaAreasCursosProsseguidos(egressos(), flag())
GraficoAreasCursosProsseguidos(dataframe)
})
# Quais cursos o egresso fez após a graduação
output$cursosProsseguidos <- renderPlotly({
dataframe <- ConsultaCursosProsseguidos(egressos(), flag())
GraficoCursosProsseguidos(dataframe)
})
# ==============================================================================
# CONSULTAS PROFISSIONAIS
# ==============================================================================
# Quantidade de egressos na parte profissional
output$quantidadeEgressosProfissional <- renderValueBox({
valueBox(
paste0(QuantidadeEgressosProfissional(egressos()), " de ", TotalDeEgressos(siglaCurso())), "Egressos trabalham",
icon = icon("address-book"),
color = "light-blue"
)
})
# Quantidade de empresass que os egressos trabalham atualmente
output$quantidadeEmpresasAtuais <- renderValueBox({
valueBox(
paste0(QuantidadeEmpresasAtuais(egressos()), " empresas"), "Empregam os egressos",
icon = icon("building"),
color = "light-blue"
)
})
# Mostra se o egresso trabalha na area de formação do curso da graduação
output$trabalhaAreaFormacao <- renderPlotly({
dataframe <- ConsultaAreasFormacaoEmprego(egressos(), siglaCurso())
GraficoTrabalhaAreaFormacao(dataframe)
})
# Qual área o egresso trabalha no último/atual emprego
output$areaAtualEmprego <- renderPlotly({
dataframe <- ConsultaAreasFormacaoEmprego(egressos(), siglaCurso())
GraficoAreaAtualEmprego(dataframe)
})
# Mostra se a empresa atual de trabalho é pública ou privada
output$tipoDaEmpresa <- renderPlotly({
dataframe <- ConsultaTipoEmpresa(egressos())
GraficoTipoEmpresa(dataframe)
})
# Nome da empresa atual de trabalho
output$nomeEmpresaAtual <- renderPlotly({
dataframe <- ConsultaNomeEmpresaAtual(egressos())
GraficoNomeEmpresaAtual(dataframe)
})
# Localização da empresa no último/atual emprego
output$localizacaoEmpresas <- renderPlotly({
dataframe <- ConsultaLocalizacaoEmpresas(egressos())
GraficoLocalizacaoEmpresas(dataframe)
})
# Atual cargo na ampresa no último/atual emprego
output$cargosAtuais <- renderPlotly({
dataframe <- ConsultaCargosAtuais(egressos())
GraficoCargosAtuais(dataframe)
})
}
shinyApp(ui, server)
